<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns:db="http://www.mulesoft.org/schema/mule/db" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <data-mapper:config name="map_to_list_user_" transformationGraphPath="map_to_list_user_.grf" doc:name="map_to_list_user_"/>
    <batch:job name="syncUsersBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <logger message="querying database" level="INFO" doc:name="Logger"/>
            <db:select config-ref="GenericDatabaseConnector" doc:name="Database">
                <db:template-query-ref name="QueryUsers"/>
            </db:select>
        </batch:input>
        <batch:process-records>
            <batch:step name="foreachUserFetchSalesforce">
                <enricher source="#[payload]" target="#[recordVars['userInSF']]" doc:name="store result in record var 'userInSF'">
                    <sfdc:query-single config-ref="SalesforceA" query="SELECT Id, ProfileId, Email FROM User WHERE Email = '#[payload.email]'"  doc:name="Query Salesforce for current user"/>
                </enricher>
                <logger message="after sf query #[payload] #[recordVars.userInSF]" level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="foreachUserUpsertInSalesforce">
                <expression-component doc:name="Add id and profile id to the payload"><![CDATA[if(recordVars['userInSF'] is NullPayload){

} else {

	payload.put('sfid', recordVars['userInSF']['Id']);
	payload.put('sfprofileid', recordVars['userInSF']['ProfileId']);

}

]]></expression-component>

                <logger message=" before upsert  #[payload]" level="INFO" doc:name="Log payload before Upsert"/>
                <data-mapper:transform config-ref="map_to_list_user_" doc:name="Map To List&lt;User&gt;"/>
                <logger message="before salesforce upsert  #[payload]" level="INFO" doc:name="Logger"/>

                    <sfdc:upsert config-ref="SalesforceA" externalIdFieldName="Id" type="User" doc:name="Upsert Salesforce User">
                        <sfdc:objects ref="#[payload]">
                        </sfdc:objects>
                    </sfdc:upsert>
                    <logger message="666666 after upsert #[payload]" level="INFO" doc:name="Log payload after Upsert"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name="transform BatchJobInstance to JSON"/>
            <logger message="Migration process has finished: #[payload]" level="INFO" doc:name="log migration process has finished"/>
        </batch:on-complete>
    </batch:job>
    <flow name="mainFlow" doc:name="mainFlow">
        <batch:execute name="syncUsersBatch" doc:name="trigger syncUsersBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="catch Exception and call defaultChoiceExceptionStrategy"/>
    </flow>
</mule>
